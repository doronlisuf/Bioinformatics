library(matrixStats)
library(ggplot2)
library(DESeq2)
library(magrittr)
library(ggplot2)
df <- read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt")
df_counts <- read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt")
df_metadata <- read.table("GSE119290_series_matrix.txt")
matrix_df_counts <- matrix(as.numeric(unlist(df_counts)),nrow=nrow(df_counts))
matrix_df_counts
matrix_df_metadata <- matrix(as.character(unlist(df_metadata)),nrow=nrow(df_metadata))
matrix_df_metadata
matrix_of_data <- matrix(as.numeric(unlist(df)),nrow=nrow(df))
matrix_of_ranges <- rowRanges(matrix_of_data, rows = NULL, cols = NULL, na.rm = FALSE, dim. = dim(matrix_of_data), useNames = NA)
vector_of_ranges <- 0
for(i in 1:26364) {
vector_of_ranges[i] <- matrix_of_ranges[i,2]-matrix_of_ranges[i,1]
}
plot(density(vector_of_ranges), log='x')
cts <- as.matrix(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
coldata
dds <- DESeqDataSetFromMatrix(countData = cts,colData = coldata,design = ~ dex)
df <- read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt")
df_counts <- read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt")
df_metadata <- read.table("GSE119290_series_matrix.txt")
matrix_df_counts <- matrix(as.numeric(unlist(df_counts)),nrow=nrow(df_counts))
matrix_df_metadata <- matrix(as.character(unlist(df_metadata)),nrow=nrow(df_metadata))
matrix_of_data <- matrix(as.numeric(unlist(df)),nrow=nrow(df))
matrix_of_ranges <- rowRanges(matrix_of_data, rows = NULL, cols = NULL, na.rm = FALSE, dim. = dim(matrix_of_data), useNames = NA)
vector_of_ranges <- 0
for(i in 1:26364) {
vector_of_ranges[i] <- matrix_of_ranges[i,2]-matrix_of_ranges[i,1]
}
plot(density(vector_of_ranges), log='x')
cts <- as.matrix(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
dds <- DESeqDataSetFromMatrix(countData = cts,colData = coldata,design = ~ dex)
cts <- as.matrix(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
cts <- as.matrix(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
dds <- DESeqDataSetFromMatrix(countData = cts,colData = coldata,design = ~dex)
cts <- as.matrix(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
dds <- DESeqDataSetFromMatrix(countData = cts,colData = coldata,design = ~ dex)
cts <- as.matrix(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
dds <- DESeqDataSetFromMatrix(countData = cts,colData = coldata,design = ~ dex)
library(umap)
library(data.table)
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
df.umap
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
coldata
xylim <- range(df.umap$layout)
plot(xylim, xylim, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"]), cex=6, pch=20)
tsne(df, labels=as.factor(coldata[,"dex"]))
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
df.umap
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
coldata
xylim <- range(df.umap$layout)
plot(xylim, xylim, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"]), cex=6, pch=20)
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
xylim <- range(df.umap$layout)
plot(xylim, xylim, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"]), cex=6, pch=20)
labels.u = unique(labels)
labels.u = unique(coldata[,"dex"])
legend.pos = "topleft"
legend.text = as.character(labels.u)
if (add) {
legend.pos = "bottomleft"
legend.text = paste(as.character(labels.u), legend.suffix)
}
legend.pos = "bottomleft"
legend.text = paste(as.character(labels.u), legend.suffix)
legend.text = paste(as.character(labels.u), "")
legend(legend.pos, legend=legend.text, inset=0.03,col=colors[as.integer(labels.u)],bty="n", pch=pch, cex=cex.legend)
legend(legend.pos, legend=legend.text, inset=0.03,col=colors[as.integer(labels.u)],bty="n", pch=pch, cex=0.85)
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
xylim <- range(df.umap$layout)
plot(xylim, xylim, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"]), cex=6, pch=20)
labels.u = unique(coldata[,"dex"])
legend.pos = "topleft"
legend.text = as.character(labels.u)
legend.pos = "bottomleft"
legend.text = paste(as.character(labels.u), "")
legend(legend.pos, legend=legend.text, inset=0.03,col=colors[as.integer(labels.u)],bty="n", pch=pch, cex=0.85)
legend(legend.pos, legend=legend.text, inset=0.03,col=colors[as.integer(labels.u)],bty="n", pch=20, cex=0.85)
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
xylim <- range(df.umap$layout)
plot(xylim, xylim, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"]), cex=6, pch=20)
labels.u = unique(coldata[,"dex"])
legend.pos = "topleft"
legend.text = as.character(labels.u)
legend.pos = "bottomleft"
legend.text = paste(as.character(labels.u), "")
legend(legend.pos, legend=legend.text, inset=0.03,col=colors[as.integer(labels.u)],bty="n", pch=20, cex=0.85)
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
xylim <- range(df.umap$layout)
plot(xylim, xylim, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"]), cex=6, pch=20)
labels.u = unique(coldata[,"dex"])
legend.pos = "topleft"
legend.text = as.character(labels.u)
legend.pos = "bottomleft"
legend.text = paste(as.character(labels.u), "")
legend(legend.pos, legend=legend.text, inset=0.03,col=colors[as.integer(labels.u)],bty="n", pch=20, cex=0.85)
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
xylim <- range(df.umap$layout)
plot(xylim, xylim, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"]), cex=6, pch=20)
labels.u = unique(coldata[,"dex"])
legend.pos = "topleft"
legend.text = as.character(labels.u)
legend.pos = "bottomleft"
legend.text = paste(as.character(labels.u), "")
legend(legend.pos, legend=legend.text, inset=0.03,col=as.integer(labels.u),bty="n", pch=20, cex=0.85)
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
xylim <- range(df.umap$layout)
plot(xylim, xylim, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"]), cex=6, pch=20)
labels.u = unique(coldata[,"dex"])
legend.pos = "topleft"
legend.text = as.character(labels.u)
legend.pos = "bottomleft"
legend.text = paste(as.character(labels.u), "")
legend(legend.pos, legend=legend.text, inset=0.03,col=as.integer(labels.u),bty="n", pch=20, cex=4)
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
xylim <- range(df.umap$layout)
plot(xylim, xylim, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"]), cex=6, pch=20)
labels.u = unique(coldata[,"dex"])
legend.pos = "topleft"
legend.text = as.character(labels.u)
legend.pos = "bottomleft"
legend.text = paste(as.character(labels.u), "")
legend(legend.pos, legend=legend.text, inset=0.03,col=as.integer(labels.u),bty="n", pch=20, cex=1)
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
xylim <- range(df.umap$layout)
plot(xylim, xylim, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"])+1, cex=6, pch=20)
labels.u = unique(coldata[,"dex"])
legend.pos = "topleft"
legend.text = as.character(labels.u)
legend.pos = "bottomleft"
legend.text = paste(as.character(labels.u), "")
legend(legend.pos, legend=legend.text, inset=0.03,col=as.integer(labels.u),bty="n", pch=20, cex=1)
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
xylim <- range(df.umap$layout)
plot(xylim, xylim, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"])+1, cex=6, pch=20)
labels.u = unique(coldata[,"dex"])
legend.pos = "topleft"
legend.text = as.character(labels.u)
legend.pos = "bottomleft"
legend.text = paste(as.character(labels.u), "")
legend(legend.pos, legend=legend.text, inset=0.03,col=as.integer(labels.u)+1,bty="n", pch=20, cex=1)
cts <- (read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
dds <- DESeqDataSetFromMatrix(countData = cts,colData = coldata,design = ~ dex)
cts <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
dds <- DESeqDataSetFromMatrix(countData = cts,colData = coldata,design = ~ dex)
cts <- as.matrix(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
dds <- DESeqDataSetFromMatrix(countData = cts,colData = coldata,design = ~ dex)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
if (!("DESeq2" %in% installed.packages())) {
BiocManager::install("DESeq2", update = FALSE)
}
if (!("EnhancedVolcano" %in% installed.packages())) {
BiocManager::install("EnhancedVolcano", update = FALSE)
}
if (!("apeglm" %in% installed.packages())) {
BiocManager::install("apeglm", update = FALSE)
}
library(matrixStats)
library(ggplot2)
library(DESeq2)
library(magrittr)
library(ggplot2)
library(umap)
library(data.table)
df <- read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt")
df_counts <- read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt")
df_metadata <- read.table("GSE119290_series_matrix.txt")
matrix_df_counts <- matrix(as.numeric(unlist(df_counts)),nrow=nrow(df_counts))
matrix_df_metadata <- matrix(as.character(unlist(df_metadata)),nrow=nrow(df_metadata))
matrix_of_data <- matrix(as.numeric(unlist(df)),nrow=nrow(df))
matrix_of_ranges <- rowRanges(matrix_of_data, rows = NULL, cols = NULL, na.rm = FALSE, dim. = dim(matrix_of_data), useNames = NA)
vector_of_ranges <- 0
for(i in 1:26364) {
vector_of_ranges[i] <- matrix_of_ranges[i,2]-matrix_of_ranges[i,1]
}
plot(density(vector_of_ranges), log='x')
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
xylim <- range(df.umap$layout)
plot(xylim, xylim, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"])+1, cex=6, pch=20)
labels.u = unique(coldata[,"dex"])
legend.pos = "topleft"
legend.text = as.character(labels.u)
legend.pos = "bottomleft"
legend.text = paste(as.character(labels.u), "")
legend(legend.pos, legend=legend.text, inset=0.03,col=as.integer(labels.u)+1,bty="n", pch=20, cex=1)
cts <- as.matrix(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
dds <- DESeqDataSetFromMatrix(countData = cts,colData = coldata,design = ~ dex)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
coldata
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
xylim <- range(df.umap$layout)
plot(xylim, xylim, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"])+1, cex=6, pch=10)
labels.u = unique(coldata[,"dex"])
legend.pos = "topleft"
legend.text = as.character(labels.u)
legend.pos = "bottomleft"
legend.text = paste(as.character(labels.u), "")
legend(legend.pos, legend=legend.text, inset=0.03,col=as.integer(labels.u)+1,bty="n", pch=20, cex=1)
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
xylim <- range(df.umap$layout)
plot(xylim, xylim, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"])+1, cex=3, pch=20)
labels.u = unique(coldata[,"dex"])
legend.pos = "topleft"
legend.text = as.character(labels.u)
legend.pos = "bottomleft"
legend.text = paste(as.character(labels.u), "")
legend(legend.pos, legend=legend.text, inset=0.03,col=as.integer(labels.u)+1,bty="n", pch=20, cex=1)
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
xylim <- range(df.umap$layout)
plot(xylim, xylim, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"])+1, cex=2, pch=20)
labels.u = unique(coldata[,"dex"])
legend.pos = "topleft"
legend.text = as.character(labels.u)
legend.pos = "bottomleft"
legend.text = paste(as.character(labels.u), "")
legend(legend.pos, legend=legend.text, inset=0.03,col=as.integer(labels.u)+1,bty="n", pch=20, cex=1)
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
xylim <- range(df.umap$layout)
plot(xylim, xylim, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"])+1, cex=1, pch=20)
labels.u = unique(coldata[,"dex"])
legend.pos = "topleft"
legend.text = as.character(labels.u)
legend.pos = "bottomleft"
legend.text = paste(as.character(labels.u), "")
legend(legend.pos, legend=legend.text, inset=0.03,col=as.integer(labels.u)+1,bty="n", pch=20, cex=1)
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
xylim <- range(df.umap$layout)
plot(xylim, xylim, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"])+1, cex=1, pch=20)
labels.u = unique(coldata[,"dex"])
legend.text = as.character(labels.u)
legend.pos = "bottomleft"
legend.text = paste(as.character(labels.u), "")
legend(legend.pos, legend=legend.text, inset=0.03,col=as.integer(labels.u)+1,bty="n", pch=20, cex=1)
setwd("~/bioinformatics")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
if (!("DESeq2" %in% installed.packages())) {
BiocManager::install("DESeq2", update = FALSE)
}
if (!("EnhancedVolcano" %in% installed.packages())) {
BiocManager::install("EnhancedVolcano", update = FALSE)
}
if (!("apeglm" %in% installed.packages())) {
BiocManager::install("apeglm", update = FALSE)
}
library(magrittr)
library(matrixStats)
library(ggplot2)
library(DESeq2)
cts <- as.matrix(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
coldata
dds <- DESeqDataSetFromMatrix(countData = cts,colData = coldata,design = ~ dex)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
if (!("DESeq2" %in% installed.packages())) {
BiocManager::install("DESeq2", update = FALSE)
}
if (!("EnhancedVolcano" %in% installed.packages())) {
BiocManager::install("EnhancedVolcano", update = FALSE)
}
if (!("apeglm" %in% installed.packages())) {
BiocManager::install("apeglm", update = FALSE)
}
library(matrixStats)
library(ggplot2)
library(DESeq2)
library(magrittr)
library(ggplot2)
library(umap)
library(data.table)
df <- read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt")
df_counts <- read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt")
df_metadata <- read.table("GSE119290_series_matrix.txt")
matrix_df_counts <- matrix(as.numeric(unlist(df_counts)),nrow=nrow(df_counts))
matrix_df_metadata <- matrix(as.character(unlist(df_metadata)),nrow=nrow(df_metadata))
matrix_of_data <- matrix(as.numeric(unlist(df)),nrow=nrow(df))
matrix_of_ranges <- rowRanges(matrix_of_data, rows = NULL, cols = NULL, na.rm = FALSE, dim. = dim(matrix_of_data), useNames = NA)
vector_of_ranges <- 0
for(i in 1:26364) {
vector_of_ranges[i] <- matrix_of_ranges[i,2]-matrix_of_ranges[i,1]
}
plot(density(vector_of_ranges), log='x')
dds <- DESeqDataSetFromMatrix(countData = cts,colData = coldata,design = ~ dex)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
if (!("DESeq2" %in% installed.packages())) {
BiocManager::install("DESeq2", update = FALSE)
}
if (!("EnhancedVolcano" %in% installed.packages())) {
BiocManager::install("EnhancedVolcano", update = FALSE)
}
if (!("apeglm" %in% installed.packages())) {
BiocManager::install("apeglm", update = FALSE)
}
library(magrittr)
library(matrixStats)
library(ggplot2)
library(DESeq2)
cts <- as.matrix(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
coldata
dds <- DESeqDataSetFromMatrix(countData = cts,colData = coldata,design = ~ dex)
dds <- DESeqDataSetFromMatrix(countData = cts,colData = coldata,design = ~ dex)
library("matrixStats")
library(ggplot2)
library(DESeq2)
df <- read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt")
df_counts <- read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt")
df_metadata <- read.table("GSE119290_series_matrix.txt")
matrix_df_counts <- matrix(as.numeric(unlist(df_counts)),nrow=nrow(df_counts))
matrix_df_counts
matrix_df_metadata <- matrix(as.character(unlist(df_metadata)),nrow=nrow(df_metadata))
matrix_df_metadata
matrix_of_data <- matrix(as.numeric(unlist(df)),nrow=nrow(df))
matrix_of_ranges <- rowRanges(matrix_of_data, rows = NULL, cols = NULL, na.rm = FALSE, dim. = dim(matrix_of_data), useNames = NA)
vector_of_ranges <- 0
for(i in 1:26364) {
vector_of_ranges[i] <- matrix_of_ranges[i,2]-matrix_of_ranges[i,1]
}
plot(density(vector_of_ranges), log='x')
cts <- as.matrix(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
coldata
dds <- DESeqDataSetFromMatrix(countData = cts,colData = coldata,design = ~ dex)
vsd <- vst(dds, blind=FALSE)
plotPCA(vsd, intgroup=c("dex"))
library("matrixStats")
library(ggplot2)
library(DESeq2)
df <- read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt")
df_counts <- read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt")
df_metadata <- read.table("GSE119290_series_matrix.txt")
matrix_df_counts <- matrix(as.numeric(unlist(df_counts)),nrow=nrow(df_counts))
matrix_df_counts
matrix_df_metadata <- matrix(as.character(unlist(df_metadata)),nrow=nrow(df_metadata))
matrix_df_metadata
matrix_of_data <- matrix(as.numeric(unlist(df)),nrow=nrow(df))
matrix_of_ranges <- rowRanges(matrix_of_data, rows = NULL, cols = NULL, na.rm = FALSE, dim. = dim(matrix_of_data), useNames = NA)
vector_of_ranges <- 0
for(i in 1:26364) {
vector_of_ranges[i] <- matrix_of_ranges[i,2]-matrix_of_ranges[i,1]
}
plot(density(vector_of_ranges), log='x')
cts <- as.matrix(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
coldata
dds <- DESeqDataSetFromMatrix(countData = cts,colData = coldata,design = ~ dex)
vsd <- vst(dds, blind=FALSE)
plotPCA(vsd, intgroup=c("dex"))
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
xylim <- range(df.umap$layout)
plot(xylim, xylim, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"])+1, cex=2, pch=20)
labels.u = unique(coldata[,"dex"])
legend.text = as.character(labels.u)
legend.pos = "bottomleft"
legend.text = paste(as.character(labels.u), "")
legend(legend.pos, legend=legend.text, inset=0.03,col=as.integer(labels.u)+1,bty="n", pch=20, cex=1)
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
xylim <- range(df.umap$layout)
plot(xylim, xylim, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"])+1, cex=2, pch=20)
labels.u = unique(coldata[,"dex"])
legend.text = as.character(labels.u)
legend.pos = "bottomleft"
legend.text = paste(as.character(labels.u), "")
legend(legend.pos, legend=legend.text, inset=0.03,col=as.integer(labels.u)+1,bty="n", pch=20, cex=1)
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
xylim <- range(df.umap$layout)
plot(xylim, xylim, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"])+1, cex=2, pch=20)
labels.u = unique(coldata[,"dex"])
legend.text = as.character(labels.u)
legend.pos = "bottomleft"
legend.text = paste(as.character(labels.u), "")
legend(legend.pos, legend=legend.text, inset=0.03,col=as.integer(labels.u)+1,bty="n", pch=20, cex=1)
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
xylim <- range(df.umap$layout)
plot(xylim, xylim, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"])+1, cex=2, pch=20)
labels.u = unique(coldata[,"dex"])
legend.text = as.character(labels.u)
legend.pos = "bottomleft"
legend.text = paste(as.character(labels.u), "")
legend(legend.pos, legend=legend.text, inset=0.03,col=as.integer(labels.u)+1,bty="n", pch=20, cex=1)
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
xylim <- range(df.umap$layout)
plot(xylim, xylim, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"])+1, cex=2, pch=20)
labels.u = unique(coldata[,"dex"])
legend.text = as.character(labels.u)
legend.pos = "bottomleft"
legend.text = paste(as.character(labels.u), "")
legend(legend.pos, legend=legend.text, inset=0.03,col=as.integer(labels.u)+1,bty="n", pch=20, cex=1)
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
xylim <- range(df.umap$layout)
plot(xylim, xylim, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"])+1, cex=2, pch=20)
labels.u = unique(coldata[,"dex"])
legend.text = as.character(labels.u)
legend.pos = "bottomleft"
legend.text = paste(as.character(labels.u), "")
legend(legend.pos, legend=legend.text, inset=0.03,col=as.integer(labels.u)+1,bty="n", pch=20, cex=1)
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
xylim <- range(df.umap$layout)
plot(xylim, xylim, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"])+2, cex=2, pch=20)
labels.u = unique(coldata[,"dex"])
legend.text = as.character(labels.u)
legend.pos = "bottomleft"
legend.text = paste(as.character(labels.u), "")
legend(legend.pos, legend=legend.text, inset=0.03,col=as.integer(labels.u)+1,bty="n", pch=20, cex=1)
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
dimension1 <- range(df.umap$layout)
dimension2 <- dimension1
plot(dim1, dim2, type="n")
df <- transpose(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
df.umap = umap(df)
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
dimension1 <- range(df.umap$layout)
dimension2 <- dimension1
plot(dimension1, dimension2, type="n")
points(df.umap$layout[,1], df.umap$layout[,2], col=as.integer(coldata[,"dex"])+2, cex=2, pch=20)
labels.u = unique(coldata[,"dex"])
legend.text = as.character(labels.u)
legend.pos = "bottomleft"
legend.text = paste(as.character(labels.u), "")
legend(legend.pos, legend=legend.text, inset=0.03,col=as.integer(labels.u)+2,bty="n", pch=20, cex=1)
BiocManager::install("DESeq2", update = TRUE)
BiocManager::install("DESeq2", update = TRUE, force = TRUE)
