plot(hc)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 5000 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:5000],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
#draw heatmap with clusters and dendrograms
library(dendextend)
library(ComplexHeatmap)
row_dend = as.dendrogram(hclust(dist(d), method="ward.D"))# row clustering
row_dend = color_branches(row_dend, k = 2)
col_dend = as.dendrogram(hclust(dist(t(d)), method="ward.D")) # column clustering
col_dend = color_branches(col_dend, k = 2)
Heatmap(
d,
name = "expression",
column_title = c("Cluster 1", "Cluster 2"),
row_title = c("Cluster 1", "Cluster 2"),
row_title_rot = 0,
row_names_gp = gpar(fontsize = 7),
cluster_rows = row_dend,
cluster_columns = col_dend,
row_split = 2,
column_split = 2
)
suppressMessages()
suppressMessages(
Heatmap(
d,
name = "expression",
column_title = c("Cluster 1", "Cluster 2"),
row_title = c("Cluster 1", "Cluster 2"),
row_title_rot = 0,
row_names_gp = gpar(fontsize = 7),
cluster_rows = row_dend,
cluster_columns = col_dend,
row_split = 2,
column_split = 2
)
)
dds <- DESeqDataSetFromMatrix(countData = matrix_of_data,colData = coldata,design = ~ dex)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 10 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:10],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 100 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:100],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 1000 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:1000],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 10000 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:10000],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 5000 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:5000],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
#draw heatmap with clusters and dendrograms
library(dendextend)
library(ComplexHeatmap)
row_dend = as.dendrogram(hclust(dist(d), method="ward.D"))# row clustering
row_dend = color_branches(row_dend, k = 2)
col_dend = as.dendrogram(hclust(dist(t(d)), method="ward.D")) # column clustering
col_dend = color_branches(col_dend, k = 2)
suppressMessages(
Heatmap(
d,
name = "expression",
column_title = c("Cluster 1", "Cluster 2"),
row_title = c("Cluster 1", "Cluster 2"),
row_title_rot = 0,
row_names_gp = gpar(fontsize = 7),
cluster_rows = row_dend,
cluster_columns = col_dend,
row_split = 2,
column_split = 2
)
)
dds <- DESeqDataSetFromMatrix(countData = matrix_of_data,colData = coldata,design = ~ dex)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 10 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:10],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 100 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:100],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 1000 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:1000],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 10000 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:10000],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 5000 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:5000],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
if(!("ConsensusClusterPlus" %in% installed.packages()))
BiocManager::install('ConsensusClusterPlus', update = FALSE)
if (!("Seurat" %in% installed.packages())) {
BiocManager::install("Seurat", update = FALSE)
}
if (!("limma" %in% installed.packages())) {
BiocManager::install("limma", update = FALSE)
}
library(ConsensusClusterPlus)
library(Seurat)
library(limma)
library(dplyr)
library(patchwork)
library(clusterProfiler)
library(gprofiler2)
library(pheatmap)
library(RColorBrewer)
library(magrittr)
library(matrixStats)
library(ggplot2)
library(DESeq2)
matrix_of_data <- as.matrix(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
coldata
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:5000],]
d1=sweep(d,1, apply(d,1,median,na.rm=T))
title="ConsensusClusterPlus"
results1 = ConsensusClusterPlus(d1,maxK=6,reps=50,pItem=0.8,pFeature=1,title=title,clusterAlg="pam",distance="pearson")
icl = calcICL(results,title=title)
for(gene_count in c(10, 100,1000,10000)){
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:gene_count],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
title="ConsensusClusterPlus"
results = ConsensusClusterPlus(d,maxK=6,reps=50,pItem=0.8,pFeature=1,title=title,clusterAlg="pam",distance="pearson")
#ggplot(results[1], aes(y=Freq, axis1=))
}
#coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
#levels(coldata$dex) <- c(levels(coldata$dex), 1)
#coldata$dex[coldata$dex == 'SZ'] <- 1
#levels(coldata$dex) <- c(levels(coldata$dex), 2)
#coldata$dex[coldata$dex == 'Control'] <- 2
consensus_res <- results1[[2]]$consensusClass
replace(consensus_res, 1, "SZ")
replace(consensus_res, 2, "Control")
chisq <- chisq.test(coldata$dex, consensus_res)
chisq
cts <- as.matrix(read.table("GSE119290_Readhead_2018_RNAseq_gene_counts.txt"))
coldata<-read.csv("coldata.csv",header = T,row.names=1,stringsAsFactors=T)
dds <- DESeqDataSetFromMatrix(countData = matrix_of_data,colData = coldata,design = ~ dex)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 10 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:10],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 100 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:100],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 1000 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:1000],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 10000 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:10000],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 5000 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:5000],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
#draw heatmap with clusters and dendrograms
row_dend = as.dendrogram(hclust(dist(d), method="ward.D"))# row clustering
row_dend = color_branches(row_dend, k = 2)
col_dend = as.dendrogram(hclust(dist(t(d)), method="ward.D")) # column clustering
col_dend = color_branches(col_dend, k = 2)
suppressMessages(
Heatmap(
d,
name = "expression",
column_title = c("Cluster 1", "Cluster 2"),
row_title = c("Cluster 1", "Cluster 2"),
row_title_rot = 0,
row_names_gp = gpar(fontsize = 7),
cluster_rows = row_dend,
cluster_columns = col_dend,
row_split = 2,
column_split = 2
)
)
chisq <- chisq.test(coldata$dex, hc)
?chisq.test
View(hc)
chisq <- chisq.test(coldata$dex, di)
View(results1)
View(coldata)
hc <- cutree(hc, k = 2)
chisq <- chisq.test(coldata$dex, hc)
dds <- DESeqDataSetFromMatrix(countData = matrix_of_data,colData = coldata,design = ~ dex)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 10 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:10],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 100 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:100],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 1000 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:1000],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 10000 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:10000],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 5000 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:5000],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
hclust_results <- cutree(hc, k = 2)
chisq <- chisq.test(coldata$dex, hc)
hclust_results <- cutree(hc, k = 2)
chisq <- chisq.test(coldata$dex, hclust_results)
plot(hclust_results)
hclust_results
hclust_results <- cutree(hc, k = 1:5)
hclust_results
chisq <- chisq.test(coldata$dex, hclust_results)
hclust_results <- cutree(hc, k = 1:44)
hclust_results
chisq <- chisq.test(coldata$dex, hclust_results)
hclust_results <- cutree(hc, k = 2)
replace(hclust_results, 1, "SZ")
replace(hclust_results, 2, "Control")
hclust_results
chisq <- chisq.test(coldata$dex, hclust_results)
hclust_results <- cutree(hc, k = 2)
replace(hclust_results, "1", "SZ")
replace(hclust_results, "2", "Control")
hclust_results
chisq <- chisq.test(coldata$dex, hclust_results)
hclust_results <- cutree(hc, k = 2)
hclust_results
chisq <- chisq.test(coldata$dex, hclust_results)
hclust_results <- cutree(hc, k = 2)
replace(hclust_results, 1, "SZ")
replace(hclust_results, 2, "Control")
hclust_results
chisq <- chisq.test(coldata$dex, hclust_results)
hclust_results <- cutree(hc, k = 2)
replace(hclust_results, hclust_results == 1, "SZ")
replace(hclust_results, hclust_results == 2, "Control")
hclust_results
chisq <- chisq.test(coldata$dex, hclust_results)
hclust_results <- cutree(hc, k = 2)
hclust_results
replace(hclust_results, hclust_results == 1, "SZ")
hclust_results <- cutree(hc, k = 2)
replace(hclust_results, hclust_results == 1, "SZ")
replace(hclust_results, hclust_results == "2", "Control")
hclust_results
chisq <- chisq.test(coldata$dex, hclust_results)
hclust_results <- cutree(hc, k = 2)
replace(hclust_results, hclust_results == 1, "SZ")
hclust_results
hclust_results <- cutree(hc, k = 2)
hclust_results <- replace(hclust_results, hclust_results == 1, "SZ")
hclust_results
hclust_results <- replace(hclust_results, hclust_results == 2, "Control")
hclust_results
chisq <- chisq.test(coldata$dex, hclust_results)
results1[[2]][["consensusClass"]]
# performing knn clustring method with 10000 genes.
pbmc <- Seurat::CreateSeuratObject(counts = cts, project = "pbmc3k", min.cells = 3, min.features = 200)
pbmc
head(pbmc@meta.data, 5)
pbmc <- Seurat::NormalizeData(pbmc)
pbmc <- Seurat::FindVariableFeatures(pbmc, selection.method = "vst", nfeatures = 10000)
head(pbmc@assays, 5)
all.genes <- rownames(pbmc)
pbmc <- Seurat::ScaleData(pbmc, features = all.genes)
pbmc <- Seurat::RunPCA(pbmc, features = Seurat::VariableFeatures(pbmc), npcs =43)
Seurat::DimPlot(pbmc, reduction = "pca")
pbmc
Seurat::ElbowPlot(pbmc)
pbmc <- Seurat::FindNeighbors(pbmc, dims = 1:20)
pbmc <- Seurat::FindClusters(pbmc, resolution = 1.)
head(Seurat::Idents(pbmc),42)
pbmc <- Seurat::RunUMAP(pbmc, dims = 1:20)
Seurat::DimPlot(pbmc, reduction = "umap")
aluv_data = as.data.frame(table(Seurat::Cells(pbmc),Seurat::Idents(pbmc), coldata$dex))
aluv_data
ggplot(aluv_data,
aes(y = Freq, axis1 = Var1, axis2 = Var2)) +
geom_alluvium(aes(fill = Var3), width = 1/12) +
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_label(stat = "stratum", aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("samples", "cluster groups"), expand = c(.05, .05)) +
scale_fill_brewer(type = "qual", palette = "Set1") +
ggtitle("alluvial diagram for knn with 10000 genes")
chisq <- chisq.test(table(Seurat::Idents(pbmc), coldata$dex))
chisq$p.value
View(chisq)
chisq[["data.name"]]
table(Seurat::Idents(pbmc)
x = table(Seurat::Idents(pbmc)
x <- table(Seurat::Idents(pbmc)
x <- table(Seurat::Idents(pbmc))
table(Seurat::Idents(pbmc))
View(pbmc)
Seurat::Idents(pbmc)
dds <- DESeqDataSetFromMatrix(countData = matrix_of_data,colData = coldata,design = ~ dex)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 10 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:10],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 100 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:100],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 1000 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:1000],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 10000 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:10000],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#create distance matrix with the top 5000 variable genes
mads=apply(matrix_of_data,1,mad)
d=matrix_of_data[rev(order(mads))[1:5000],]
d=sweep(d,1, apply(d,1,median,na.rm=T))
d = scale(d)
di <- dist(d)
#perform hclustering and plot dendrogram
hc <- hclust(di, method="ward.D")
plot(hc)
wow <- as.matrix(di)
View(wow)
View(col_dend)
wow <- hclust(dist(t(d)), method="ward.D")
View(wow)
hclust_results <- cutree(wow, k = 2)
wow <- hclust(dist(t(d)), method="ward.D")
hclust_results <- cutree(wow, k = 2)
hclust_results <- replace(hclust_results, hclust_results == 1, "SZ")
hclust_results <- replace(hclust_results, hclust_results == 2, "Control")
hclust_results
hclust_results
chisq <- chisq.test(coldata$dex, hclust_results)
chisq
sample_cluster <- hclust(dist(t(d)), method="ward.D")
hclust_results <- cutree(sample_cluster, k = 2)
hclust_results <- replace(hclust_results, hclust_results == 1, "SZ")
hclust_results <- replace(hclust_results, hclust_results == 2, "Control")
chisq <- chisq.test(coldata$dex, hclust_results)
chisq
